https://www.infoworld.com/article/3543268/junit-5-tutorial-part-2-unit-testing-spring-mvc-with-junit-5.html


https://medium.com/quick-code/spring-boot-how-to-design-efficient-search-rest-api-c3a678b693a0            Spring Boot: how to design an efficient search REST API? ( with Live Demo )
https://medium.com/fleetx/searching-and-filtering-spring-data-jpa-specification-way-e22bc055229a   ********************************************
					https://github.com/turkraft/spring-filter 
							https://spring-filter.herokuapp.com/swagger-ui/index.html?configUrl=/v3/api-docs/swagger-config
https://www.baeldung.com/rest-api-search-language-spring-data-specifications                  *********************		

https://loizenai.com/spring-boot-pagination-filter/#testcase-4-pagination-filtering-sorting-request
https://github.com/pkainulainen/spring-data-jpa-examples/blob/master/querydsl/src/test/java/net/petrikainulainen/springdata/jpa/web/TodoSearchControllerTest.java

@Test
    @DisplayName("Test findById Success")
	@DisplayName("Test findAll")
	@DisplayName("Test findById Not Found")
	
	 @Test(expected = InsufficientProductsException.class)
    public void purchaseWithInsufficientAvailableQuantity() throws InsufficientProductsException {
        int availableQuantity = 3;
        System.out.println("Stubbing getAvailableProducts(product) to return " + availableQuantity);
        when(productDao.getAvailableProducts(product)).thenReturn(availableQuantity);
        try {
            System.out.println("productService.buy(product" + purchaseQuantity + ") should throw InsufficientProductsException");
            productService.buy(product, purchaseQuantity);
        } catch (InsufficientProductsException e) {
            System.out.println("InsufficientProductsException has been thrown");
            verify(productDao, times(0)).orderProduct(product, purchaseQuantity);
            System.out.println("Verified orderProduct(product, " + purchaseQuantity + ") is not called");
            throw e;
        }
    }
	
	
	@GetMapping(path = "/characters/page")
	Page<MovieCharacter> loadCharactersPage(
			@PageableDefault(page = 0, size = 20)
			@SortDefault.SortDefaults({
					@SortDefault(sort = "name", direction = Sort.Direction.DESC),
					@SortDefault(sort = "id", direction = Sort.Direction.ASC)
			})
		Pageable pageable) {
		return characterRepository.findAllPage(pageable);
	}
	
https://github.com/vijjayy81/spring-boot-jpa-rest-demo-filter-paging-sorting/tree/master#readme           *********
		I think you should run mvn clean install first. seems this package is generated by maven swagger plugin as I checked, it's configurated at the pom file.
				https://github.com/vijjayy81/spring-boot-jpa-rest-demo-filter-paging-sorting/issues/2
									https://stackoverflow.com/questions/39419160/jackson-databind-classpath-issue


spring-boot-jpa-rest-demo-filter-paging-sorting
https://github.com/vijjayy81/spring-boot-jpa-rest-demo-filter-paging-sorting/blob/master/src/main/java/org/vijjayy/demo/springframework/boot/jpa/controller/EmployeesController.java
//Forms the specification for attributes by Filter specification builder from EmployeeFilterSpecification
		//We can mix and match and, or, not conditions
		Specification<Employee> specs = Specifications
https://github.com/vijjayy81/spring-boot-jpa-rest-demo-filter-paging-sorting		
eq	Equals	city=eq:Sydney
neq	Not Equals	country=neq:uk
gt	Greater Than	amount=gt:10000
gte	Greater Than or equals to	amount=gte:10000
lt	Less Than	amount=lt:10000
lte	Less Than or equals to	amount=lte:10000
in	IN	country=in:uk, usa, au
nin	Not IN	country=nin:fr, de, nz
btn	Between	joiningDate=btn:2018-01-01, 2016-01-01
like	Like	firstName=like:John

https://github.com/nilestanner/spring-filter-sort-page-sample/blob/master/src/main/java/com/nilestanner/filtersortpagesample/rest/MainController.java
								 @RequestParam(value = "pagesize", required = false, defaultValue = "50")
								 
https://suleymanyildirim.org/spring-boot/testing-http-methods-using-mockito-framework/
			https://github.com/barrida/http-verbs/tree/484befd8b6f20465cd20c2f769c7d49112e19d71
			

 @Transactional
    @GetMapping(value = "/page", produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
//    public ResponseEntity<List<Car>> get(
    public ResponseEntity<PagingResponse> get1(@RequestParam(value = "page", defaultValue = "0") int page, 
    		@RequestParam(value = "size", defaultValue = "10") int size,
            @And({
                    @Spec(path = "manufacturer", params = "manufacturer", spec = Like.class),
                    @Spec(path = "model", params = "model", spec = Like.class),
                    @Spec(path = "country", params = "country", spec = In.class),
                    @Spec(path = "type", params = "type", spec = Like.class),
                    @Spec(path = "createDate", params = "createDate", spec = Equal.class),
                    @Spec(path = "createDate", params = {"createDateGt", "createDateLt"}, spec = Between.class)
            }) Specification<Car> spec,
            Sort sort,
            @RequestHeader HttpHeaders headers
            
            ) {
//        final PagingResponse response = carService.get(spec, headers, sort);
        
        final PagingResponse response1 = carService.get1( page, size, spec, headers, sort);
//        return new ResponseEntity<>(response.getElements(), returnHttpHeaders(response), HttpStatus.OK);
        return new ResponseEntity<>(response1, HttpStatus.OK);
    }

	
	    public PagingResponse get1( int page, int size, Specification<Car> spec, HttpHeaders headers, Sort sort) {
          return get(spec, PageRequest.of(page, size, sort));
    }
	
	
https://springframework.guru/mocking-unit-tests-mockito/
https://stackoverflow.com/questions/50532856/mockmvc-configure-a-header-for-all-requests
https://stackoverflow.com/questions/18336277/how-to-check-string-in-response-body-with-mockmvc
https://stackoverflow.com/questions/36752560/springframework-dao-invaliddataaccessresourceusageexception-hibernate-sqlgrammar/36759154
https://stackoverflow.com/questions/27032433/set-default-page-size-for-jpa-pageable-object
https://stackoverflow.com/questions/12296642/is-it-possible-to-have-empty-requestparam-values-use-the-defaultvalue
